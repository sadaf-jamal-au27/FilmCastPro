name: Build and Deploy to EKS

on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'Dockerfile'
      - 'package*.json'
      - 'charts/**'

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: filmcastpro
  ECR_REGISTRY: 008099619893.dkr.ecr.us-east-1.amazonaws.com

jobs:
  build-and-push:
    name: Build Docker Image and Push to ECR
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push Docker image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --tag ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG \
            --tag ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest \
            --push \
            .
      
      - name: Update Helm values with new image tag
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          sed -i "s|tag:.*|tag: \"$IMAGE_TAG\"|" charts/filmcastpro/values.yaml
      
      - name: Commit and push updated values
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add charts/filmcastpro/values.yaml
          git commit -m "chore: update image tag to $IMAGE_TAG [skip ci]" || exit 0
          git push

  # Email notification on deployment
  notify:
    name: Send Email Notification
    needs: build-and-push
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Send success email
        if: needs.build-and-push.result == 'success'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "✅ FilmCastPro Deployment Success"
          to: ${{ secrets.EMAIL_USERNAME }}
          from: GitHub Actions <noreply@github.com>
          body: |
            🎉 Deployment completed successfully!
            
            📦 Repository: ${{ github.repository }}
            🔖 Commit: ${{ github.sha }}
            👤 Author: ${{ github.actor }}
            💬 Message: ${{ github.event.head_commit.message }}
            
            🐋 Docker Image: ${{ github.sha }}
            📍 Pushed to: ECR (008099619893.dkr.ecr.us-east-1.amazonaws.com/filmcastpro)
            
            🔄 Next Steps (Automatic):
            - ArgoCD will detect the change
            - Kubernetes will pull the new image
            - Application will be updated in ~2 minutes
            
            🌐 View Application:
            http://a594e11411ab740019c57084a40b5fa5-1983588965.us-east-1.elb.amazonaws.com
            
            📊 View Workflow:
            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            ⏱️ Deployment Time: ${{ needs.build-and-push.outputs.time }}
            
      - name: Send failure email
        if: needs.build-and-push.result == 'failure'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "❌ FilmCastPro Deployment Failed"
          to: ${{ secrets.EMAIL_USERNAME }}
          from: GitHub Actions <noreply@github.com>
          body: |
            ⚠️ Deployment failed!
            
            📦 Repository: ${{ github.repository }}
            🔖 Commit: ${{ github.sha }}
            👤 Author: ${{ github.actor }}
            💬 Message: ${{ github.event.head_commit.message }}
            
            ❌ Status: FAILED
            
            🔍 Troubleshooting Steps:
            1. Check the workflow logs below
            2. Verify AWS credentials are valid
            3. Check ECR repository permissions
            4. Review Docker build logs
            
            📊 View Workflow Logs:
            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            💡 Common Issues:
            - AWS credentials expired
            - ECR permissions missing
            - Docker build errors
            - Network connectivity issues

